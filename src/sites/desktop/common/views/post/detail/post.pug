include ../content
include ../repost-form
include ./sub-post

mixin post(post)
	if post.type == 'repost'
		+core(post.post, true, post)
	else
		+core(post, false)

mixin core(post, isRepost, repost)
	- var login = (me != null);
	- var isHaveReplies = (post.repliesCount > 0);
	- var isTalk = (post.type == 'reply' && post.inReplyToPost != null && post.inReplyToPost.inReplyToPost != null);
	- var userTitle = post.user.comment != null ? post.user.comment : '@' + post.user.screenName;
	article.post(
			class                   = isRepost ? 'repost ' + post.type : post.type
			tabindex                = '-1'
			lang                    = post.user.lang
			title                   = post.createdAt
			itemscope
			itemtype                = 'http://schema.org/BlogPosting'
			data-id                 = post.id
			data-cursor             = isRepost ? repost.cursor : post.cursor
			data-type               = post.type
			data-user-id            = post.user.id
			data-user-screen-name   = post.user.screenName
			data-is-liked          != login ? post.isLiked.toString() : null
			data-is-reposted       != login ? post.isReposted.toString() : null
			data-is-have-replies   != isHaveReplies.toString()
			data-is-talk           != isTalk.toString())
		if isTalk
			button.read-talk(title='会話をもっと読む')
				i.fa.fa-ellipsis-v
		if post.type == 'reply'
			if isTalk
				div.talk
			+subPost(post.inReplyToPost)(class='reply-source')
		if isRepost
			- var reposterTitle = repost.user.comment != null ? repost.user.comment : '@' + repost.user.screenName;
			p.repost-info
				a.avatar-anchor(href= config.url + '/' + repost.user.screenName, title= reposterTitle)
					img.avatar(src= repost.user.avatarThumbnailUrl, alt='avatar')
				i.fa.fa-retweet
				| Reposted by 
				a.name(href= config.url + '/' + repost.user.screenName)= repost.user.name
		div.main
			header.header
				div.avatar-area
					a.avatar-anchor(href=config.url + '/' + post.user.screenName, title= post.user.comment != null ? post.user.comment : '@' + post.user.screenName, rel='avatar')
						img.avatar(src=post.user.avatarUrl, alt='avatar')
				div.main
					div.top
						div.left
							div.author
								h1.name
									a.user-name(href=config.url + '/' + post.user.screenName, rel='author')= post.user.name
								if post.user.isVerified
									img.verified-icon(src= config.resourcesUrl + '/common/verified.png', alt='verified', title='認証済み')
								p.screen-name= '@' + post.user.screenName
						div.right
							if post.app != null
								p.via
									a.via-anchor
										span.caption via
										b.app-name= post.app.name
							p.created-at
								a.time-anchor(href=config.url + '/' + post.user.screenName + '/' + post.id, itemprop='url')
									time(datetime=post.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= post.createdAt
					div.bottom
						p.comment= post.user.comment
			div.content(itemprop='articleBody')
				+content(post)
			footer.footer
				if login
					ul.actions
						li.reply
							button.reply-button(title='返信', role='button')
								i.fa.fa-reply
							a.count(href=config.url + '/' + post.user.screenName + '/' + post.id)
								= post.repliesCount != 0 ? post.repliesCount : ''
						li.repost
							button.repost-button(title= post.isReposted ? 'シェアを取り消し' : 'シェア', role='button')
								i.fa.fa-retweet
							a.count(href=config.url + '/' + post.user.screenName + '/' + post.id + '/reposts')
								= post.repostsCount != 0 ? post.repostsCount : ''
						li.like
							button.like-button(title= post.isLiked ? 'Unlike' : 'Like', role='button')
								if userSettings.enableSushi
									i.fa
										| 🍣
								else
									i.fa.fa-thumbs-o-up
							a.count(href=config.url + '/' + post.user.screenName + '/' + post.id + '/likes')
								= post.likesCount != 0 ? post.likesCount : ''
			div.likes-and-reposts
				if likes != null && likes.length > 0
					section.likes
						header.caption
							a.count= post.likesCount
							h2.title
								| Like
						ol.users
							each like in likes
								li.user
									a.avatar-anchor(href='/' + like.user.screenName, title= '@' + like.user.screenName, data-tooltip= like.user.name)
										img.avatar(src=like.user.avatarUrl, alt='avatar')
				if reposts != null && reposts.length > 0
					section.reposts
						header.caption
							a.count= post.repostsCount
							h2.title
								| Repost
						ol.users
							each repost in reposts
								li.user
									a.avatar-anchor(href='/' + repost.user.screenName, title= '@' + repost.user.screenName, data-tooltip= repost.user.name)
										img.avatar(src=repost.user.avatarUrl, alt='avatar')
		form.reply-form
			if login
				img.me-avatar(src=me.avatarUrl, alt='avatar')
				div.form
					textarea(name='text', placeholder='この投稿に返信...', role='textbox', aria-multiline)= '@' + post.user.screenName + ' '
					div.design-allow(role='presentation')
					ol.photos
					ol.uploads
					button.attach-from-local(type='button', role='button', title='PCから画像を添付する')
						i.fa.fa-upload
					button.attach-from-album(type='button', role='button', title='アルバムから画像を添付する')
						i.fa.fa-folder-open
					button.submit-button.ui-button(type='submit', role='button')
						| Reply
						i.fa.fa-reply
					input(name='file', type='file', accept='image/*', multiple)
			else
				p plz login
		div.replies(itemprop='comment')
			if replies != null && replies.length > 0
				each reply in replies
					+subPost(reply)
		if login && me.id != post.userId
			+repost-form(post)
